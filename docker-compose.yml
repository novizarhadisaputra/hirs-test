cat > docker-compose.yml <<'EOF'
version: "3.9"
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: hr
      POSTGRES_PASSWORD: hrpass
      POSTGRES_DB: hr_main
    ports: ["5432:5432"]
    volumes: [pgdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres_logging:
    image: postgres:16
    environment:
      POSTGRES_USER: log
      POSTGRES_PASSWORD: logpass
      POSTGRES_DB: logging_db
    ports: ["5433:5432"]
    volumes: [pglogdata:/var/lib/postgresql/data]
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports: ["5672:5672","15672:15672"]

  gateway:
    build: ./gateway
    env_file: .env
    depends_on: [auth, employee, attendance]
    ports: ["3000:3000"]

  auth:
    build: ./services/auth
    env_file: .env
    depends_on: [postgres, rabbitmq]

  employee:
    build: ./services/employee
    env_file: .env
    depends_on: [postgres, rabbitmq]

  attendance:
    build: ./services/attendance
    env_file: .env
    depends_on: [postgres, rabbitmq]

  logging:
    build: ./services/logging
    env_file: .env
    depends_on: [rabbitmq, postgres_logging]

  web-employee:
    build: ./web-employee
    env_file: .env
    depends_on: [gateway]
    ports: ["5173:5173"]

  web-hrd:
    build: ./web-hrd
    env_file: .env
    depends_on: [gateway]
    ports: ["5174:5173"]

volumes:
  pgdata:
  pglogdata:
EOF
